import streamlit as st
import pandas as pd
import mysql.connector
import pymysql
from datetime import datetime


# 1. CREATE DATABASE ESTABLISH CONNECTION WITH MYSQL
# Connection parameters
connection_parameters = {
    'host': "localhost",
    'user': "root",
    'password': "Nahid123"
    # 'database': 'software_licenses'
}

# Establishing the connection
conn = pymysql.connect(**connection_parameters)
cursor = conn.cursor()

# Creating the database
db = "CREATE DATABASE IF NOT EXISTS software_licenses"
cursor.execute(db)
cursor.execute("USE software_licenses")



# Create tables
cursor.execute('''
        CREATE TABLE IF NOT EXISTS Licenses (
            license_id INTEGER PRIMARY KEY AUTOINCREMENT,
            license_key TEXT UNIQUE,
            software_name TEXT,
            license_type TEXT,
            purchase_date DATE,
            expiration_date DATE,
            num_seats INTEGER,
            license_cost REAL,
            vendor_info TEXT,
            associated_contracts TEXT
        )
    ''')
cursor.execute('''
        CREATE TABLE IF NOT EXISTS Users (
            user_id INTEGER PRIMARY KEY AUTOINCREMENT,
            username TEXT UNIQUE,
            role TEXT
        )
    ''')

cursor.execute('''
        CREATE TABLE IF NOT EXISTS LicenseAssignments (
            assignment_id INTEGER PRIMARY KEY AUTOINCREMENT,
            license_id INTEGER,
            user_id INTEGER,
            assignment_date DATE,
            FOREIGN KEY(license_id) REFERENCES Licenses(license_id),
            FOREIGN KEY(user_id) REFERENCES Users(user_id)
        )
    ''')

conn.commit()



# 2. Define Functions for Asset Management


def get_connection():
    return pymysql.connect(**connection_parameters)

def add_license(license_data):
    conn = get_connection()
    try:
        with conn.cursor() as cursor:
            cursor.execute('''
                INSERT INTO Licenses (license_key, software_name, license_type, purchase_date, expiration_date, num_seats, license_cost, vendor_info, associated_contracts)
                VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
            ''', license_data)
        conn.commit()
    finally:
        conn.close()

def assign_license(license_id, user_id):
    conn = get_connection()
    try:
        with conn.cursor() as cursor:
            cursor.execute('''
                INSERT INTO LicenseAssignments (license_id, user_id, assignment_date)
                VALUES (%s, %s, %s)
            ''', (license_id, user_id, datetime.now().date()))
        conn.commit()
    finally:
        conn.close()

def get_expiring_licenses():
    conn = get_connection()
    try:
        with conn.cursor() as cursor:
            today = datetime.now().date()
            cursor.execute('''
                SELECT * FROM Licenses
                WHERE expiration_date < %s
            ''', (today,))
            expiring_licenses = cursor.fetchall()
    finally:
        conn.close()
    
    return expiring_licenses

